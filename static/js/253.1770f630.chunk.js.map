{"version":3,"file":"static/js/253.1770f630.chunk.js","mappings":"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","sources":["components/ExtendedHero.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport LoadingSpinner from './LoadingSpinner';\nimport { heroTypes } from '../utils/constants';\n\nexport default function ExtendedHero() {\n\n  const factionColors: Record<string, string> = {\n    'United Empire': '#c23336',\n    'Sophons': '#35c0e4',\n    'Umbral Choir': '#1d72d2',\n    'Riftborn': '#fa882c',\n    'Cravers': '#604535',\n    'Lumeris': '#fdc000',\n    'Unfallen': '#2b6710',\n    'Vaulters': '#613785',\n  };\n\n  const [hero, setHero] = useState<{\n    name: string,\n    heroImage: string,\n    faction: string,\n    influence: number,\n    types: number[],\n    description: string,\n  }>();\n\n  console.log(hero);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function fetchHero() {\n      try {\n        const response = await axios.get(`https://645d3679e01ac610589fc7ea.mockapi.io/heroes/${id}`);\n        setHero(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchHero();\n  }, []);\n\n  if (!hero) {\n    return <LoadingSpinner txt=\"Loading hero...\" />\n  }\n\n  return (\n    <section className=\"hero-full\">\n      <h1 className=\"hero-full__title\" style={{ color: factionColors[hero.faction] }}>\n        {hero.name}\n      </h1>\n      <div className=\"hero-full__content\">\n        <div className=\"hero-full__column\">\n          <img src={hero.heroImage} alt=\"Hero\" className=\"hero-full__img\" />\n          <ul className=\"hero-full__stats\">\n            <li className=\"hero-full__stats-item\">\n              <p className=\"hero-full__txt\">\n                Faction\n              </p>\n              <span className=\"hero-full__line\"></span>\n              <p className=\"hero-full__txt\" style={{ color: factionColors[hero.faction] }}>\n                {hero.faction}\n              </p>\n            </li>\n            <li className=\"hero-full__stats-item\">\n              <p className=\"hero-full__txt\">\n                Class\n              </p>\n              <span className=\"hero-full__line\"></span>\n              <p className=\"hero-full__txt hero-full__txt_class\">\n                {hero.types.map((number) => heroTypes[number]).join(' or ')}\n              </p>\n            </li>\n            <li className=\"hero-full__stats-item\">\n              <p className=\"hero-full__txt\">\n                Influence\n              </p>\n              <span className=\"hero-full__line\"></span>\n              <p className=\"hero-full__txt hero-full__txt_influence\">\n                {hero.influence}/12\n              </p>\n            </li>\n            <li className=\"hero-full__stats-item\">\n              <p className=\"hero-full__txt\">\n                Politics\n              </p>\n              <span className=\"hero-full__line\"></span>\n              <p className=\"hero-full__txt\">\n                123\n              </p>\n            </li>\n          </ul>\n        </div>\n        <div className=\"hero-full__story\">\n          <h2 className=\"hero-full__subtitle\">Story</h2>\n          <p className=\"hero-full__descr\">\n            {hero.description}\n          </p>\n          <NavLink to=\"/\" className=\"hero-full__back\">\n            Go back\n          </NavLink>\n        </div>\n      </div>\n    </section>\n  )\n}\n"],"names":["ExtendedHero","factionColors","_useState","useState","_useState2","_slicedToArray","hero","setHero","console","log","id","useParams","useEffect","_fetchHero","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","data","t0","stop","apply","arguments","fetchHero","_jsxs","className","children","_jsx","style","color","faction","name","src","heroImage","alt","types","map","number","heroTypes","join","influence","description","NavLink","to","LoadingSpinner","txt"],"sourceRoot":""}